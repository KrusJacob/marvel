{"version":3,"file":"static/js/96.7f3f182c.chunk.js","mappings":"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","sources":["components/appBanner/appBanner.js","components/errorMessage/ErrorMessage.js","components/comicList/comicList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import \"./appBanner.scss\";\r\n\r\nimport avengers from \"../../resources/img/Avengers.png\";\r\nimport logo from \"../../resources/img/Avengers_logo.png\";\r\n\r\nconst AppBanner = () => {\r\n  return (\r\n    <div className=\"app__banner\">\r\n      <img src={avengers} alt=\"avengers\" />\r\n      <div className=\"app__banner-text\">\r\n        New comics every week! <br /> Stay tuned!\r\n      </div>\r\n      <img src={logo} alt=\"logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppBanner;\r\n","import img from \"./error.gif\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ErrorMessage = () => {\r\n  const navigate = useNavigate();\r\n  // Обращение к папке public\r\n  //   return <img src={process.env.PUBLIC_URL + \"/error.gif\"} />;\r\n  return (\r\n    <>\r\n      <img\r\n        style={{ display: \"block\", width: \"250px\", height: \"250px\", objectFit: \"contain\", margin: \"0 auto\" }}\r\n        src={img}\r\n        alt=\"Error\"\r\n      />\r\n      {/* <button\r\n        style={{\r\n          display: \"block\",\r\n          textAlign: \"center\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"24px\",\r\n          margin: \"30px auto\",\r\n          padding: \"5px\",\r\n          border: \"1px solid #000\",\r\n          width: \"max-content\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={() => navigate(-1)}\r\n      >\r\n        Go Back\r\n      </button> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport \"./comicList.scss\";\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n  switch (process) {\r\n    case \"waiting\":\r\n      return <Spinner />;\r\n\r\n    case \"loading\":\r\n      return newItemLoading ? <Component /> : <Spinner />;\r\n\r\n    case \"confirmed\":\r\n      return <Component />;\r\n\r\n    case \"error\":\r\n      return <ErrorMessage />;\r\n\r\n    default:\r\n      throw new Error(\"Unexpected process state\");\r\n  }\r\n};\r\n\r\nconst ComicList = () => {\r\n  const [comicsList, setComicsList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(200);\r\n  const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n  const { getAllComics, process, setProcess } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n\r\n    getAllComics(offset)\r\n      .then(onCharListLoaded)\r\n      .then(() => setProcess(\"confirmed\"));\r\n  };\r\n\r\n  const onCharListLoaded = (newComicList) => {\r\n    let ended = false;\r\n    if (newComicList.length < 8) {\r\n      ended = true;\r\n    }\r\n\r\n    setComicsList((comicsList) => [...comicsList, ...newComicList]);\r\n    setNewItemLoading(false);\r\n    setOffset((offset) => offset + 8);\r\n    setComicsEnded(ended);\r\n  };\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, id) => {\r\n      return (\r\n        <CSSTransition key={item.id} timeout={500} classNames=\"comic__item\">\r\n          <li className=\"comic__item\">\r\n            <Link to={`${item.id}`}>\r\n              <img src={item.thumbnail} alt={item.title} />\r\n              <div className=\"comic__item-name\">{item.title}</div>\r\n              <div className=\"comic__item-price\">{item.price}</div>\r\n            </Link>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n    return (\r\n      <ul className=\"comic__grid\">\r\n        <TransitionGroup component={null}>{items}</TransitionGroup>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"comic__list\">\r\n      {setContent(process, () => renderItems(comicsList), newItemLoading)}\r\n\r\n      <button\r\n        className=\"btn btn__main btn__long \"\r\n        disabled={newItemLoading}\r\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\r\n        onClick={() => onRequest(offset)}\r\n      >\r\n        <div className=\"inner\">LOAD MORE</div>\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  // return (\r\n  //   <div className=\"comic__list\">\r\n  //     <ul className=\"comic__grid\">\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={uw} alt=\"ULTIMATE X-MEN\" />\r\n  //           <div className=\"comic__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\r\n  //           <div className=\"comic__item-price\">9.99$</div>\r\n  //         </a>\r\n  //       </li>\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={xMen} alt=\"X-MEN\" />\r\n  //           <div className=\"comic__item-name\">X-Men: Days of Future Past</div>\r\n  //           <div className=\"comic__item-price\">NOT AVAILABLE</div>\r\n  //         </a>\r\n  //       </li>\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={uw} alt=\"ULTIMATE X-MEN\" />\r\n  //           <div className=\"comic__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\r\n  //           <div className=\"comic__item-price\">9.99$</div>\r\n  //         </a>\r\n  //       </li>\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={xMen} alt=\"X-MEN\" />\r\n  //           <div className=\"comic__item-name\">X-Men: Days of Future Past</div>\r\n  //           <div className=\"comic__item-price\">NOT AVAILABLE</div>\r\n  //         </a>\r\n  //       </li>\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={uw} alt=\"ULTIMATE X-MEN\" />\r\n  //           <div className=\"comic__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\r\n  //           <div className=\"comic__item-price\">9.99$</div>\r\n  //         </a>\r\n  //       </li>\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={xMen} alt=\"X-MEN\" />\r\n  //           <div className=\"comic__item-name\">X-Men: Days of Future Past</div>\r\n  //           <div className=\"comic__item-price\">NOT AVAILABLE</div>\r\n  //         </a>\r\n  //       </li>\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={uw} alt=\"ULTIMATE X-MEN\" />\r\n  //           <div className=\"comic__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\r\n  //           <div className=\"comic__item-price\">9.99$</div>\r\n  //         </a>\r\n  //       </li>\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={xMen} alt=\"X-MEN\" />\r\n  //           <div className=\"comic__item-name\">X-Men: Days of Future Past</div>\r\n  //           <div className=\"comic__item-price\">NOT AVAILABLE</div>\r\n  //         </a>\r\n  //       </li>\r\n  //     </ul>\r\n  //     <button className=\"btn btn__main btn__long \">\r\n  //       <div className=\"inner\">LOAD MORE</div>\r\n  //     </button>\r\n  //   </div>\r\n  // );\r\n};\r\n\r\nexport default ComicList;\r\n","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/appBanner\";\r\nimport ComicList from \"../comicList/comicList\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Page with list of our comics\" />\r\n        <title>Comics page</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      <ComicList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { request, clearError, process, setProcess } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=0441b6176dfb307f18bba5c5f9ee903e\";\r\n  const _OffsetChars = 79;\r\n  const _OffestComics = 100;\r\n\r\n  // getResource = async (url) => {\r\n  //   let res = await fetch(url);\r\n\r\n  //   if (!res.ok) {\r\n  //     throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n  //   }\r\n\r\n  //   return await res.json();\r\n  // };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllCharacters = async (offset = _OffsetChars) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = _OffestComics) => {\r\n    const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  // checkData = (data) => {\r\n  //   if (data) {\r\n  //     console.log(data);\r\n  //     console.log(data.length);\r\n  //     return data;\r\n  //   } else {\r\n  //     return \"There is no description for this character\";\r\n  //   }\r\n  // };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description ? comics.description : \"Description not found\",\r\n      pages: comics.pageCount,\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || \"en-us\",\r\n      price: comics.prices[0].price ? comics.prices[0].price + \"$\" : \"NOT AVAILABLE\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    process,\r\n    setProcess,\r\n    getCharacterByName,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n    clearError,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState(\"waiting\");\r\n\r\n  const request = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = { \"Content-Type\": \"application/json\" }) => {\r\n      setProcess(\"loading\");\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n\r\n        return data;\r\n      } catch (e) {\r\n        setProcess(\"error\");\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess(\"loading\");\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n"],"names":["className","src","avengers","alt","logo","useNavigate","style","display","width","height","objectFit","margin","img","setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","useState","comicsList","setComicsList","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onCharListLoaded","newComicList","ended","length","arr","items","map","item","id","CSSTransition","timeout","classNames","to","thumbnail","title","price","TransitionGroup","component","renderItems","disabled","onClick","Helmet","name","content","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","data","clearError","useHttp","_apiBase","_apiKey","getCharacterByName","res","results","_transformCharacter","getAllCharacters","getCharacter","_transformComics","getComic","char","description","slice","path","extension","homepage","urls","wiki","comics","pages","pageCount","language","textObjects","prices"],"sourceRoot":""}